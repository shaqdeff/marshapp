services:
  postgres:
    image: postgres:15
    container_name: marshapp-postgres
    environment:
      POSTGRES_DB: marshapp
      POSTGRES_USER: marshapp_user
      POSTGRES_PASSWORD: marshapp_password
      POSTGRES_INITDB_ARGS: '--auth-host=md5 --auth-local=md5'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/permissions.sql:/docker-entrypoint-initdb.d/02-permissions.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U marshapp_user -d marshapp']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: marshapp-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: marshapp-backend
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://marshapp_user:marshapp_password@postgres:5432/marshapp
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: marshapp-frontend
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:3001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
